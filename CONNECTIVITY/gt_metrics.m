% measure connectivity matrix on ASL data% going to attempt to replicate results from the Wang, Dong and Niu 2017 paper % on scientific reports % % @ Alexandre Franco - alexandre.franco@nki.rfmh.org% Oct 25rd 2018% calculate the graph theory metrics% First we need to load the data clear all close allfilename = '/Users/alexandre.franco/Documents/HASKIKS_FNIRS/105chRS1.mat'%filename = '/Users/afranco/Documents/HASKINS_FNIRS/105chRS1.mat'%% Oxy ALL_CM_oxy = [];% looping through subject% Note - removed subject 2 11 17 24 28c_all = [];ii =1;show_cm = 0; % to plot or not to plot#ave_c = [];#ave_c_std = [];for subj = [1 3    4    5    6    7    8    9   10       12   13   14   15   16      18 19   20   21   22   23      25   26   27     29]%for ii = 1:29# Note for 105 channels, channel 40 of subject 2 is just zeros     [t, oxy, deoxy] = load_asl_cleandata(filename, subj);  %[t, oxy, deoxy] = load_asl_data(filename, subj);  CM_oxy = corr(oxy); % the is for roughly 6 minutes of data   CM_oxy_z = 0.5*log((0.99999+CM_oxy)./(1.00001-CM_oxy));  #make the main diagonal equal to zero   CM_oxy_z(1:1+size(CM_oxy,1):end) = 0;    % thresholding proportional   CM_oxy_z_01 = threshold_proportional(CM_oxy_z,0.1)>0;    return   ######    CLIM = [-0.25, 0.4];  if (show_cm)    figure     subplot(3,4,1);    imagesc(CM_oxy_z,CLIM);      colormap('jet')    title('full timeseries')    colorbar   endif  % Looking into windowing   jj = 1;  for window = [60:30:360]    oxy_window = oxy((find(t<window)),:);    CM_oxy_windowed = corr(oxy_window);    # Calculate z-score     CM_oxy_windowed_z = 0.5*log((0.99999+CM_oxy_windowed)./(1.00001-CM_oxy_windowed));    #make the main diagonal equal to zero     CM_oxy_windowed_z(1:1+size(CM_oxy_windowed_z,1):end) = 0;      ave_c(jj,ii) = mean(CM_oxy_windowed_z(:));    ave_c_std(jj,ii) = std(CM_oxy_windowed_z(:));      c(jj,ii) = corr(CM_oxy_z(:),CM_oxy_windowed_z(:));        jj = jj+1;        if (show_cm)      subplot(3,4,jj);      imagesc(CM_oxy_windowed_z,CLIM);      colorbar      title([num2str(window) 's'])    endif  end  #print -dpng ['CM_' num2str(subj)  '.png']    if (show_cm)    print(['CM_' num2str(subj)  '.png'])  endif  c  ave_c  ii = ii+1;      end % calculate the average and standard deviation c_ave = mean(c,2);c_stdev = std(c,0, 2);figurehold onerrorbar([60:30:360],c_ave,c_stdev,"k")plot([60:30:360],c_ave,"k","linewidth",2)plot([60:30:360],c_ave,"o","markersize", 10,"markerfacecolor","r","markeredgecolor","k")title('correlation to 6 minute data');hold offreturnfigurehold onerrorbar([60:30:360],ave_c,ave_c_std,"k")plot([60:30:360],ave_c,"k","linewidth",2)plot([60:30:360],ave_c, "o","markersize", 10,"markerfacecolor","b","markeredgecolor","k")title('Correlation coef standard deviation');hold off